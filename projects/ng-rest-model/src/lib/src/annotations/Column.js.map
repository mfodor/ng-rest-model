{"version":3,"file":"Column.js","sourceRoot":"","sources":["Column.ts"],"names":[],"mappings":";;AAAA,0CAA2C;AAC3C,0CAA8C;AAE9C,gBAAuB,iBAAyB;IAC5C,MAAM,CAAC,UAAU,MAAW,EAAE,iBAAyB;QACnD,EAAE,CAAC,CAAC,CAAC,iBAAS,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,IAAI,KAAK,CACX,uEAAuE;iBACvE,UAAQ,oBAAY,CAAC,MAAM,CAAC,0BAAuB,CAAA,CACtD,CAAC;QACN,CAAC;QAED,IAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC;QAE3C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;QAC7B,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,WAAW,GAAG,EAAE,CAAC;QAC3B,CAAC;QAED,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,iBAAiB,CAAC;QACzD,KAAK,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,iBAAiB,CAAC;IAC/D,CAAC,CAAC;AACN,CAAC;AAtBD,wBAsBC","sourcesContent":["import {RestModel} from '../classes/index';\nimport {getClassName} from '../helpers/index';\n\nexport function Column(fieldNameOnServer: string): any {\n    return function (target: any, fieldNameOnClient: string) {\n        if (!RestModel.isPrototypeOf(target.constructor)) {\n            throw new Error(\n                'Column decorator should be applied on a class that extends RestModel!' +\n                ` But ${getClassName(target)} is not extending it.`\n            );\n        }\n\n        const proto = target.constructor.prototype;\n\n        if (!proto.$mappingsFrom) {\n            proto.$mappingsFrom = {};\n        }\n\n        if (!proto.$mappingsTo) {\n            proto.$mappingsTo = {};\n        }\n\n        proto.$mappingsTo[fieldNameOnClient] = fieldNameOnServer;\n        proto.$mappingsFrom[fieldNameOnServer] = fieldNameOnClient;\n    };\n}\n"]}