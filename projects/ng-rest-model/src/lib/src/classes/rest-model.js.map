{"version":3,"file":"rest-model.js","sourceRoot":"","sources":["rest-model.ts"],"names":[],"mappings":"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","sourcesContent":["import {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {map} from 'rxjs/operators';\nimport {ApiUrlMaker, ILengthAwarePaginator} from '../../index';\nimport {ngRestModelBaseUrl, ngRestModelHttp} from '../service/ng-rest-model-config';\nimport {HasManyHandler} from './index';\n\nexport class RestModel<I = any, P = ILengthAwarePaginator<I>> {\n    protected $route: string;\n    protected $primaryKey = 'id';\n    protected $fillable: string[];\n    protected $protected: string[];\n    protected $mappingsTo: {[index: string]: string};\n    protected $mappingsFrom: {[index: string]: string};\n    protected $pagingItemsKey = 'data';\n    protected $parents: RestModel[];\n    $hasMany: {[index: string]: HasManyHandler<any>};\n\n    protected get http(): HttpClient {\n        return ngRestModelHttp();\n    }\n\n    /* *\n     * Construction\n     */\n\n    constructor() {\n        this.$primaryKey = this.$primaryKey || 'id';\n        this.$protected = [\n            '$route', '$primaryKey', '$fillable', '$protected', '$mappingsTo', '$mappingsFrom', '$pagingItemsKey', '$parents', '$hasMany'\n        ]\n            .concat((this.$protected || []));\n        this.$parents = this.$parents || [];\n        this.$hasMany = this.$hasMany || {};\n        this.$mappingsTo = this.$mappingsTo || {};\n        this.$mappingsFrom = this.$mappingsFrom || {};\n        ['$protected', '$parents', '$hasMany', '$mappingsTo', '$mappingsFrom'].forEach(\n            p => Object.defineProperty(this, p, {value: this[p], writable: false})\n        );\n    }\n\n    init(obj?: I): this {\n        this.clear();\n        return <any>this.trustedFill(obj);\n    }\n\n    clear(): this {\n        let fieldsToFill = this.getFieldsToFill();\n        for (const key of fieldsToFill) {\n            this[key] = void 0;\n        }\n        this[this.$primaryKey] = void 0;\n        return this;\n    }\n\n    clone(): this {\n        const clone = this._instantiate(<any>this);\n        this.$parents.forEach(p => clone.addParent(p));\n        return clone;\n    }\n\n    /* *\n     * Getters and setters\n     */\n\n    get primaryValue(): number | any {\n        return this[this.$primaryKey];\n    }\n\n    get postData(): any {\n        return this.plain(true);\n    }\n\n    /* *\n     * General functions\n     */\n\n    plain(toServer: boolean = false): I | any {\n        const json = {};\n        for (const key of this.getFieldsToFill()) {\n            json[this.getMappedKey(key, toServer)] = this[key];\n        }\n        json[this.$primaryKey] = this.primaryValue;\n        return json;\n    }\n\n    equals(other: I | any): boolean {\n        if (!other || typeof other !== 'object' || this.primaryValue !== other[this.$primaryKey]) {\n            return false;\n        }\n        const fieldsToCheck = this.getFieldsToFill();\n        for (const f of fieldsToCheck) {\n            if (this[f] !== other[f]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /* *\n     * REST functions\n     */\n\n    // GET\n\n    all(options?: any): Observable<this[] | any> {\n        const obs = this.http.get(this.itemsUrl().build(), options);\n        if (!options || !options.observe || options.observe === 'body') {\n            return (<any>obs).map((items: I[]) => items.map(this._instantiate.bind(this)));\n        }\n        return <any>obs;\n    }\n\n    page(page?: string | number, options?: any): Observable<P> {\n        if (!options && typeof page === 'object') {\n            options = page;\n            page = void 0;\n        }\n        let url: string;\n        if (isNaN(+page) && typeof page === 'string') {\n            url = page;\n        } else {\n            if (typeof page === 'number') {\n                options = options || {};\n                options.params = Object.assign(options.params || {}, {page});\n            }\n            url = this.itemsUrl().build();\n        }\n        const obs = this.http.get(url, options);\n        if (!options || !options.observe || options.observe === 'body') {\n            return (<any>obs).map((resp: P) => {\n                resp[this.$pagingItemsKey] = resp[this.$pagingItemsKey].map(this._instantiate.bind(this));\n                return resp;\n            });\n        }\n        return <any>obs;\n    }\n\n    find(id: number | any, options?: any): Observable<this> {\n        return this.http.get(this.itemUrl(id).build(), options).pipe(map(this._instantiate.bind(this)));\n    }\n\n    fresh(options?: any): Observable<this> {\n        return this.http.get(this.itemUrl(this.primaryValue).build(), options).pipe(map(this.init.bind(this)));\n    }\n\n    // POST\n\n    create(options?: any): Observable<this> {\n        return this.http.post(this.itemsUrl().build(), this.postData, options).pipe(map(this.init.bind(this)));\n    }\n\n    // PUT\n\n    update(options?: any): Observable<this> {\n        return this.http.put(this.itemUrl().build(), this.postData, options).pipe(map(this.init.bind(this)));\n    }\n\n    save(options?: any): Observable<this> {\n        return this.primaryValue ? this.update(options) : this.create(options);\n    }\n\n    // DELETE\n\n    remove(options?: any): Observable<this> {\n        return this.http.delete(this.itemUrl().build(), options).pipe(map(this.init.bind(this)));\n    }\n\n    /* *\n     * Initialization functions\n     */\n\n    protected onAfterFill() {\n        // This method is to be overridden\n    }\n\n    fill(obj?: I | any, clearMissing: boolean = false): this {\n        if (!obj || typeof obj !== 'object') {\n            console.error('Trying to fill with non-object! This is a silence error.', obj);\n            return <any>this;\n        }\n\n        const fieldsToFill = this.getFieldsToFill();\n        for (const keyInModel of fieldsToFill) {\n            const keyOnServer = this.getMappedKey(keyInModel, true);\n            const hasValue = obj.hasOwnProperty(keyInModel) || obj.hasOwnProperty(keyOnServer);\n            const value = hasValue\n                ? obj.hasOwnProperty(keyInModel) ? obj[keyInModel] : obj[keyOnServer]\n                : null;\n            if (clearMissing || hasValue) {\n                this[keyInModel] = value;\n            }\n        }\n\n        this.onAfterFill();\n        return <any>this;\n    }\n\n    protected trustedFill(obj?: any): this {\n        if (!obj || typeof obj !== 'object') {\n            return <any>this;\n        }\n        for (const prop in obj) {\n            if (this.$protected.indexOf(prop) === -1 && obj.hasOwnProperty(prop)) {\n                this[this.getMappedKey(prop)] = obj[prop];\n            }\n        }\n        this.onAfterFill();\n        return <any>this;\n    }\n\n    /* *\n     * URL generation\n     */\n\n    addParent(parent: RestModel): this {\n        this.$parents.push(parent);\n        return <any>this;\n    }\n\n    protected getBaseUrl(): ApiUrlMaker {\n        return this.addParentRoutesTo();\n    }\n\n    protected addParentRoutesTo(maker?: ApiUrlMaker): ApiUrlMaker {\n        maker = maker || new ApiUrlMaker(ngRestModelBaseUrl());\n        if (this.$parents.length) {\n            this.$parents.forEach(p => maker.one(p.$route, p.primaryValue));\n        }\n        return maker;\n    }\n\n    itemsUrl(): ApiUrlMaker {\n        return this.getBaseUrl().all(this.$route);\n    }\n\n    itemUrl(id: number | any = null): ApiUrlMaker {\n        return this.getBaseUrl().one(this.$route, id || this.primaryValue);\n    }\n\n    /* *\n     * Overrides\n     */\n\n    toJSON() {\n        return this.plain();\n    }\n\n    /* *\n     * Private\n     */\n\n    private _instantiate(i: I): this {\n        return new (<any>this.constructor)().init(i);\n    }\n\n    private getMappedKey(key: string, toServer: boolean = false): string {\n        if (!toServer) {\n            return this.$mappingsFrom && this.$mappingsFrom[key] || key;\n        } else {\n            return this.$mappingsTo && this.$mappingsTo[key] || key;\n        }\n    }\n\n    private getFieldsToFill(): string[] {\n        if (!this.$protected || !this.$protected.length) {\n            throw new Error('Overwriting or deleting $protected field is forbidden!');\n        }\n\n        const excludeKeys = this.$protected.concat(this.$primaryKey);\n\n        return (this.$fillable || Object.keys(this))\n            .filter(key => excludeKeys.indexOf(key) === -1);\n    }\n}\n"]}