{"version":3,"file":"upload-rest-model.js","sourceRoot":"","sources":["upload-rest-model.ts"],"names":[],"mappings":"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","sourcesContent":["import {HttpEvent} from '@angular/common/http';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {map, last} from 'rxjs/internal/operators';\nimport {ngRestModelBaseUrl} from '../service/ng-rest-model-config';\nimport {ApiUrlMaker} from './index';\nimport {RestModel} from './rest-model';\n\nexport interface FileUploadRequestData {\n    file: File;\n    key: string;\n}\n\nexport abstract class UploadRestModel<I = any> extends RestModel<I> {\n    protected $upload_prefix: string;\n\n    constructor() {\n        super();\n        this.$upload_prefix = this.$upload_prefix || 'upload';\n    }\n\n    upload<T = any>(formData: FormData | File | FileUploadRequestData): Observable<T> {\n        return this.doUpload(this.uploadUrl(), this.createFormData(formData));\n    }\n\n    propertyUpload<T = any>(property: string, formData: FormData | File | FileUploadRequestData): Observable<T> {\n        return this.doUpload(this.propertyUploadUrl(property), this.createFormData(formData));\n    }\n\n    uploadWithProgress<T = any>(\n        formData: FormData | File | FileUploadRequestData,\n        onEvent?: (event: HttpEvent<any>, index: number) => any\n    ): Observable<T> {\n        return this.doUploadWithProgress(this.uploadUrl(), this.createFormData(formData), onEvent);\n    }\n\n    propertyUploadWithProgress<T = any>(\n        property: string,\n        formData: FormData | File | FileUploadRequestData,\n        onEvent?: (event: HttpEvent<any>, index: number) => any\n    ): Observable<T> {\n        return this.doUploadWithProgress(this.propertyUploadUrl(property), this.createFormData(formData), onEvent);\n    }\n\n    protected doUpload(url: ApiUrlMaker, formData: FormData): Observable<any> {\n        return <any>this.http.post(url.build(), formData);\n    }\n\n    protected doUploadWithProgress(\n        url: string | ApiUrlMaker,\n        formData: FormData,\n        onEvent?: (event: HttpEvent<any>, index: number) => any\n    ): Observable<any> {\n        if (typeof onEvent !== 'function') {\n            onEvent = () => void 0;\n        }\n\n        // The `HttpClient.request` API produces a raw event stream\n        // which includes start (sent), progress, and response events.\n        return <any>this.http.post(url.toString(), formData, {reportProgress: true, observe: 'events'}).pipe(\n            map(onEvent),\n            // tap(onTap),\n            last() // return last (completed) message to caller\n            // , catchError(onError)\n        );\n    }\n\n    protected uploadUrl(): ApiUrlMaker {\n        return this.getUploadBaseUrl().all(this.$route);\n    }\n\n    protected propertyUploadUrl(property: string): ApiUrlMaker {\n        return this.getUploadBaseUrl().one(this.$route, this.primaryValue).all(property);\n    }\n\n    protected getUploadBaseUrl(): ApiUrlMaker {\n        const uploadBase = new ApiUrlMaker(ngRestModelBaseUrl()).all(this.$upload_prefix);\n        return this.addParentRoutesTo(uploadBase);\n    }\n\n    protected createFormData(of: FormData | File | FileUploadRequestData): FormData {\n        if (of instanceof FormData) {\n            return of;\n        }\n        if (of instanceof File) {\n            of = {\n                file: of,\n                key: 'file'\n            };\n        }\n        const formData = new FormData();\n        formData.append(of.key, of.file);\n        return formData;\n    }\n}\n"]}