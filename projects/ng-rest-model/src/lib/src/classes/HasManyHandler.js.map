{"version":3,"file":"HasManyHandler.js","sourceRoot":"","sources":["HasManyHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { map } from 'rxjs/internal/operators';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {HasManyConfig} from '../annotations/index';\nimport {RestModel} from '../classes/index';\nimport {getter} from '../helpers/index';\nimport {ILengthAwarePaginator} from '../interfaces/index';\nimport {FetchMode} from './index';\n\nexport class HasManyHandler<T extends RestModel, P = ILengthAwarePaginator<T>> {\n    private _list: T[] | Observable<T[]>;\n\n    paging: P;\n\n    constructor(\n        private _owner: RestModel,\n        private _config: HasManyConfig\n    ) {\n    }\n\n    get list(): Observable<T[]> | T[] {\n        if (this._list || this._config.fetch === FetchMode.EAGER) {\n            return getter(this._config.async, this._list);\n        }\n\n        return this.getAll();\n    }\n\n    getAll(options?: any): Observable<T[]> {\n        return this._list = this.fetchAll(options);\n    }\n\n    getPage(page?: string | number, options?: any): Observable<T[]> {\n        return this.fetchPage(page, options);\n    }\n\n    setList(list: T[]): void {\n        this._list = Array.isArray(list)\n            ? list.map(i => new (<any>this._config.type)().addParent(this._owner).init(i))\n            : list;\n    }\n\n    find(key: number | any): T {\n        if (!this.listIsLoaded()) {\n            return;\n        }\n        return (<T[]>this._list).find(i => i.primaryValue === key);\n    }\n\n    find$(key: number | any, options?: any): Observable<T> {\n        return this.fetchItem(key, options);\n    }\n\n    save(item: T, options?: any): Observable<T> {\n        return item.save(options).pipe(map((saved: any) => this.push(saved)));\n    }\n\n    create(obj: T, options?: any): Observable<T> {\n        let newItem = new this._config.type().addParent(this._owner).init(obj);\n        return this.save(newItem, options);\n    }\n\n    remove(item: T, options?: any): Observable<T> {\n        return item.remove(options).pipe(map((removed: any) => this.pull(removed)));\n    }\n\n    push(item: T): T {\n        if (!this.listIsLoaded()) {\n            return;\n        }\n        (<T[]>this._list).push(item);\n        return item;\n    }\n\n    pull(item: T): T {\n        if (!this.listIsLoaded()) {\n            return;\n        }\n        const index = (<T[]>this._list).findIndex(i => i.primaryValue === item.primaryValue);\n        if (index > -1) {\n            (<T[]>this._list).splice(index, 1);\n        } else {\n            console.warn('The item was not in the list!', item, this._list);\n        }\n        return item;\n    }\n\n    set(item: T, key?: number | any): T {\n        if (!this.listIsLoaded()) {\n            return;\n        }\n        key = key || item.primaryValue;\n        const index = (<T[]>this._list).findIndex(i => i.primaryValue === key);\n        if (index > -1) {\n            (<T[]>this._list).splice(index, 1, item);\n            return item;\n        } else {\n            console.warn('The item was not in the list!', item, this._list);\n            return void 0;\n        }\n    }\n\n    private fetchItem(key: number | any, options?: any): Observable<T> {\n        return this.getParentedInstance().find(key, options)\n                   .pipe(map((resp: T) => {\n                       this.set(resp);\n                       return resp;\n                   }));\n    }\n\n    private fetchAll(options?: any): Observable<T[]> {\n        return this.getParentedInstance().all(options)\n                   .pipe(map((resp: T[]) => {\n                       this.setList(resp);\n                       return <T[]>this._list;\n                   }));\n    }\n\n    private fetchPage(page?: string | number, options?: any): Observable<T[]> {\n        let instance = this.getParentedInstance();\n        return instance.page(page, options)\n                       .pipe(map((resp: any) => {\n                           this.paging = resp;\n                           this.setList(resp[instance['$pagingItemsKey']]);\n                           return <T[]>this._list;\n                       }));\n    }\n\n    private getParentedInstance(): T {\n        return new this._config.type().addParent(this._owner);\n    }\n\n    private listIsLoaded(): boolean {\n        if (!this._list || this._list instanceof Observable) {\n            console.warn('No list present or is not fetched yet. This has prevented item to be pushed.');\n            return false;\n        }\n        return true;\n    }\n}\n"]}