{"version":3,"file":"ApiUrlMaker.js","sourceRoot":"","sources":["ApiUrlMaker.ts"],"names":[],"mappings":";;AAAA;IAII,qBAAY,OAAoB;QAApB,wBAAA,EAAA,YAAoB;QAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAEM,yBAAG,GAAV,UAAW,UAA2B,EAAE,OAAwB;QAC5D,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;IAEM,yBAAG,GAAV,UAAW,UAA2B;QAClC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAEO,6BAAO,GAAf,UAAgB,IAAqB;QACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,IAAI,CAAC,CAAC;YACxD,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,4BAAM,GAAb,UAAc,MAAwC;QAClD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,2BAAK,GAAZ,UAAa,GAAoB,EAAE,KAAsB;QACrD,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC9D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAI,GAAG,SAAI,KAAO,CAAC,CAAC;QACxC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,2BAAK,GAAZ;QACI,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACtC,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEO,qCAAe,GAAvB,UAAwB,GAAQ;QAC5B,MAAM,CAAC,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,EAAE,CAAC;YAC1C,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,8BAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IACL,kBAAC;AAAD,CAAC,AA9DD,IA8DC;AA9DY,kCAAW","sourcesContent":["export class ApiUrlMaker {\n    private _parts: string[];\n    private _query: string[];\n\n    constructor(baseUrl: string = '') {\n        this._parts = [baseUrl];\n        this._query = [];\n    }\n\n    public one(collection: string | number, element: string | number): ApiUrlMaker {\n        this.addPart(collection);\n        return this.addPart(element);\n    }\n\n    public all(collection: string | number): ApiUrlMaker {\n        return this.addPart(collection);\n    }\n\n    private addPart(part: string | number): ApiUrlMaker {\n        if (!this.isValidArgument(part)) {\n            console.error('Trying to add invalid argument: ', part);\n            throw new Error('InvalidArgumentException');\n        }\n        this._parts.push('' + part);\n        return this;\n    }\n\n    public params(params: {[key: string]: number | string}): ApiUrlMaker {\n        if (!params) {\n            return this;\n        }\n        for (let key in params) {\n            if (params.hasOwnProperty(key)) {\n                this.param(key, params[key]);\n            }\n        }\n        return this;\n    }\n\n    public param(key: string | number, value: string | number): ApiUrlMaker {\n        if (key && (typeof key === 'string' || typeof key === 'number')) {\n            this._query.push(`${key}=${value}`);\n        }\n        return this;\n    }\n\n    public build(): string {\n        const parts = [this._parts.join('/')];\n        if (this._query.length) {\n            parts.push(this._query.join('&'));\n        }\n        return parts.join('?');\n    }\n\n    private isValidArgument(arg: any): boolean {\n        return (typeof arg === 'string' && arg !== '') ||\n            (typeof arg === 'number' && !isNaN(arg));\n    }\n\n    toString(): string {\n        return this.build();\n    }\n}\n"]}