{"version":3,"file":"getter.spec.js","sourceRoot":"","sources":["getter.spec.ts"],"names":[],"mappings":";;AAAA,6BAAoC;AACpC,mCAAgC;AAChC,kCAAgC;AAEhC,QAAQ,CAAC,QAAQ,EAAE;IAEf,EAAE,CAAC,2CAA2C,EAAE;QAC5C,IAAM,MAAM,GAAG,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;QAC1E,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,eAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE;QACzD,IAAM,UAAU,GAAG,SAAE,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,eAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnD,MAAM,CAAC,eAAM,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qFAAqF,EAAE;QACtF,IAAM,KAAK,GAAG,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC;QACjC,IAAI,GAAG,GAAG,eAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC9B,MAAM,CAAC,GAAG,YAAY,iBAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import {Observable, of} from 'rxjs';\nimport {getter} from './getter';\nimport 'rxjs/add/observable/of';\n\ndescribe('getter', () => {\n\n    it('should return the value if async is false', () => {\n        const values = [243, 'nick', void 0, null, {property: 'prop'}, [32, 452]];\n        values.forEach(v => expect(getter(false, v)).toBe(v));\n    });\n\n    it('should return the value if it is already an Observable', () => {\n        const observable = of({property: 'prop'});\n        expect(getter(false, observable)).toBe(observable);\n        expect(getter(true, observable)).toBe(observable);\n    });\n\n    it('should return the value as an Observable if it is not already one and async is true', () => {\n        const value = {property: 'prop'};\n        let obs = getter(true, value);\n        expect(obs instanceof Observable).toBe(true);\n        expect(obs.value).toBe(value);\n    });\n});\n"]}